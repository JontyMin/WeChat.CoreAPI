
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 09:53:31,590                                   
【执行时间】[2845]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 09:53:31,667                                   
【执行时间】[2922]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 10:43:20,726                                   
【执行时间】[3386]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 10:43:20,765                                   
【执行时间】[3425]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 10:44:23,585                                   
【执行时间】[66246]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 10:44:23,859                                   
【执行时间】[66519]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:500: {
  "message": "An exception was thrown while activating WeChat.Core.Service.ERP.VW_OrderVolume1Service.",
  "developmentMessage": "   at Autofac.Core.Resolving.Middleware.ActivatorErrorHandlingMiddleware.Execute(ResolveRequestContext context, Action`1 next)\r\n   at Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder.<>c__DisplayClass14_0.<BuildPipeline>b__1(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Pipeline.ResolvePipeline.Invoke(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Resolving.Middleware.RegistrationPipelineInvokeMiddleware.Execute(ResolveRequestContext context, Action`1 next)\r\n   at Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder.<>c__DisplayClass14_0.<BuildPipeline>b__1(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Resolving.Middleware.SharingMiddleware.Execute(ResolveRequestContext context, Action`1 next)\r\n   at Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder.<>c__DisplayClass14_0.<BuildPipeline>b__1(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder.<>c__DisplayClass14_0.<BuildPipeline>b__1(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Resolving.Middleware.CircularDependencyDetectorMiddleware.Execute(ResolveRequestContext context, Action`1 next)\r\n   at Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder.<>c__DisplayClass14_0.<BuildPipeline>b__1(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Pipeline.ResolvePipeline.Invoke(ResolveRequestContext ctxt)\r\n   at Autofac.Core.Resolving.ResolveOperation.GetOrCreateInstance(ISharingLifetimeScope currentOperationScope, ResolveRequest request)\r\n   at Autofac.Core.Resolving.ResolveOperation.ExecuteOperation(ResolveRequest request)\r\n   at Autofac.Core.Resolving.ResolveOperation.Execute(ResolveRequest request)\r\n   at Autofac.Core.Lifetime.LifetimeScope.ResolveComponent(ResolveRequest request)\r\n   at Autofac.ResolutionExtensions.TryResolveService(IComponentContext context, Service service, IEnumerable`1 parameters, Object& instance)\r\n   at Autofac.ResolutionExtensions.ResolveOptionalService(IComponentContext context, Service service, IEnumerable`1 parameters)\r\n   at Autofac.ResolutionExtensions.ResolveOptional(IComponentContext context, Type serviceType, IEnumerable`1 parameters)\r\n   at Autofac.ResolutionExtensions.ResolveOptional(IComponentContext context, Type serviceType)\r\n   at Autofac.Extensions.DependencyInjection.AutofacServiceProvider.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)"
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 10:48:10,355                                   
【执行时间】[3025]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 10:48:10,394                                   
【执行时间】[3064]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 10:48:38,801                                   
【执行时间】[31471]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 10:48:40,950                                   
【执行时间】[33620]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "toDayOrders": 87,
    "yesDayOrders": 770,
    "toMonthOrders": 7638,
    "toYearOrders": 41998
  }
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 11:29:56,747                                   
【执行时间】[3257]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 11:29:56,796                                   
【执行时间】[3306]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:30:03,140                                   
【执行时间】[9650]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:30:07,482                                   
【执行时间】[13992]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "v1": {
      "toDayOrders": 94,
      "yesDayOrders": 770,
      "toMonthOrders": 7635,
      "toYearOrders": 41995
    },
    "v2": {
      "plat": "Jumia",
      "dtype": "today",
      "orders": 13
    },
    "v3": {
      "dtype": "month",
      "datet": "2020-10",
      "orders": 24281
    }
  }
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:30:13,038                                   
【执行时间】[19548]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:30:16,589                                   
【执行时间】[23099]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "v1": {
      "toDayOrders": 94,
      "yesDayOrders": 770,
      "toMonthOrders": 7635,
      "toYearOrders": 41995
    },
    "v2": {
      "plat": "Jumia",
      "dtype": "today",
      "orders": 13
    },
    "v3": {
      "dtype": "month",
      "datet": "2020-10",
      "orders": 24281
    }
  }
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 11:30:59,198                                   
【执行时间】[2761]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 11:30:59,250                                   
【执行时间】[2812]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:31:07,582                                   
【执行时间】[11144]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 11:31:11,530                                   
【执行时间】[15093]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "v1": {
      "toDayOrders": 94,
      "yesDayOrders": 770,
      "toMonthOrders": 7635,
      "toYearOrders": 41995
    },
    "v2": [
      {
        "plat": "Jumia",
        "dtype": "today",
        "orders": 13
      },
      {
        "plat": "Daraz",
        "dtype": "today",
        "orders": 20
      },
      {
        "plat": "Lazada",
        "dtype": "today",
        "orders": 51
      },
      {
        "plat": "Linio",
        "dtype": "today",
        "orders": 0
      },
      {
        "plat": "Shopee",
        "dtype": "today",
        "orders": 8
      },
      {
        "plat": "Mercado",
        "dtype": "today",
        "orders": 2
      },
      {
        "plat": "Amazon",
        "dtype": "today",
        "orders": 0
      },
      {
        "plat": "Jumia",
        "dtype": "yesderday",
        "orders": 258
      },
      {
        "plat": "Daraz",
        "dtype": "yesderday",
        "orders": 190
      },
      {
        "plat": "Lazada",
        "dtype": "yesderday",
        "orders": 231
      },
      {
        "plat": "Linio",
        "dtype": "yesderday",
        "orders": 29
      },
      {
        "plat": "Shopee",
        "dtype": "yesderday",
        "orders": 51
      },
      {
        "plat": "Mercado",
        "dtype": "yesderday",
        "orders": 9
      },
      {
        "plat": "Amazon",
        "dtype": "yesderday",
        "orders": 2
      },
      {
        "plat": "Jumia",
        "dtype": "thisyear",
        "orders": 2701
      },
      {
        "plat": "Daraz",
        "dtype": "thisyear",
        "orders": 1808
      },
      {
        "plat": "Lazada",
        "dtype": "thisyear",
        "orders": 2147
      },
      {
        "plat": "Linio",
        "dtype": "thisyear",
        "orders": 306
      },
      {
        "plat": "Shopee",
        "dtype": "thisyear",
        "orders": 620
      },
      {
        "plat": "Mercado",
        "dtype": "thisyear",
        "orders": 34
      },
      {
        "plat": "Amazon",
        "dtype": "thisyear",
        "orders": 19
      }
    ],
    "v3": {
      "dtype": "month",
      "datet": "2020-10",
      "orders": 24281
    }
  }
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:31:40,854                                   
【执行时间】[2858]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:31:40,910                                   
【执行时间】[2913]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:32:51,136                                   
【执行时间】[2397]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:32:51,203                                   
【执行时间】[2464]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:34:36,509                                   
【执行时间】[2886]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】更新Token:
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】DEBUG                                   
【记录时间】2021-03-09 14:34:36,561                                   
【执行时间】[2938]毫秒                                   
【debug位置】System.String 属性[(null)]                                   
【debug描述】获取缓存
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 14:34:48,190                                   
【执行时间】[14567]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 14:34:53,753                                   
【执行时间】[20130]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "v1": {
      "toDayOrders": 200,
      "yesDayOrders": 776,
      "toMonthOrders": 7742,
      "toYearOrders": 42101
    },
    "v2": [
      {
        "plat": "Jumia",
        "dtype": "today",
        "orders": 29
      },
      {
        "plat": "Daraz",
        "dtype": "today",
        "orders": 67
      },
      {
        "plat": "Lazada",
        "dtype": "today",
        "orders": 87
      },
      {
        "plat": "Linio",
        "dtype": "today",
        "orders": 2
      },
      {
        "plat": "Shopee",
        "dtype": "today",
        "orders": 13
      },
      {
        "plat": "Mercado",
        "dtype": "today",
        "orders": 2
      },
      {
        "plat": "Amazon",
        "dtype": "today",
        "orders": 0
      },
      {
        "plat": "Jumia",
        "dtype": "yesderday",
        "orders": 258
      },
      {
        "plat": "Daraz",
        "dtype": "yesderday",
        "orders": 193
      },
      {
        "plat": "Lazada",
        "dtype": "yesderday",
        "orders": 231
      },
      {
        "plat": "Linio",
        "dtype": "yesderday",
        "orders": 32
      },
      {
        "plat": "Shopee",
        "dtype": "yesderday",
        "orders": 51
      },
      {
        "plat": "Mercado",
        "dtype": "yesderday",
        "orders": 9
      },
      {
        "plat": "Amazon",
        "dtype": "yesderday",
        "orders": 2
      },
      {
        "plat": "Jumia",
        "dtype": "thisyear",
        "orders": 2715
      },
      {
        "plat": "Daraz",
        "dtype": "thisyear",
        "orders": 1858
      },
      {
        "plat": "Lazada",
        "dtype": "thisyear",
        "orders": 2183
      },
      {
        "plat": "Linio",
        "dtype": "thisyear",
        "orders": 311
      },
      {
        "plat": "Shopee",
        "dtype": "thisyear",
        "orders": 622
      },
      {
        "plat": "Mercado",
        "dtype": "thisyear",
        "orders": 34
      },
      {
        "plat": "Amazon",
        "dtype": "thisyear",
        "orders": 19
      }
    ],
    "v3": [
      {
        "dtype": "month",
        "datet": "2020-10",
        "orders": 24281
      },
      {
        "dtype": "month",
        "datet": "2020-11",
        "orders": 36462
      },
      {
        "dtype": "month",
        "datet": "2020-12",
        "orders": 29279
      },
      {
        "dtype": "month",
        "datet": "2021-01",
        "orders": 22743
      },
      {
        "dtype": "month",
        "datet": "2021-02",
        "orders": 11616
      },
      {
        "dtype": "month",
        "datet": "2021-03",
        "orders": 7742
      },
      {
        "dtype": "day",
        "datet": "2021-03-04",
        "orders": 969
      },
      {
        "dtype": "day",
        "datet": "2021-03-05",
        "orders": 973
      },
      {
        "dtype": "day",
        "datet": "2021-03-06",
        "orders": 823
      },
      {
        "dtype": "day",
        "datet": "2021-03-07",
        "orders": 816
      },
      {
        "dtype": "day",
        "datet": "2021-03-08",
        "orders": 776
      },
      {
        "dtype": "day",
        "datet": "2021-03-09",
        "orders": 200
      }
    ]
  }
}
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 14:35:05,810                                   
【执行时间】[32188]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Request:http localhost:5000 /api/Dynamics/GetSalesDynamics GET  
＝＝＝＝＝＝＝＝＝＝                                   
【日志级别】INFO                                   
【记录时间】2021-03-09 14:35:16,137                                   
【执行时间】[42514]毫秒                                   
【debug位置】WeChat.Core.Api.Middleware.LogReqResponseMiddleware 属性[(null)]                                   
【debug描述】Response:200: {
  "status": 200,
  "success": true,
  "msg": "获取成功",
  "response": {
    "f1": {
      "todaySales": 3786.19,
      "yesterdaySales": 15864.62,
      "monthSales": 143041.33,
      "yearSales": 802671.07,
      "mPurAmount": 296898.5000,
      "tPurAmount": 22177.4900,
      "yPurAmount": 41018.8900
    },
    "f2": [
      {
        "dtype": "month",
        "dates": "2020-10",
        "saleAmount": 472468.07
      },
      {
        "dtype": "month",
        "dates": "2020-11",
        "saleAmount": 684311.10
      },
      {
        "dtype": "month",
        "dates": "2020-12",
        "saleAmount": 581350.41
      },
      {
        "dtype": "month",
        "dates": "2021-01",
        "saleAmount": 468480.08
      },
      {
        "dtype": "month",
        "dates": "2021-02",
        "saleAmount": 191149.62
      },
      {
        "dtype": "month",
        "dates": "2021-03",
        "saleAmount": 143041.30
      },
      {
        "dtype": "day",
        "dates": "2021-03-04",
        "saleAmount": 17827.10
      },
      {
        "dtype": "day",
        "dates": "2021-03-05",
        "saleAmount": 17208.02
      },
      {
        "dtype": "day",
        "dates": "2021-03-06",
        "saleAmount": 15710.22
      },
      {
        "dtype": "day",
        "dates": "2021-03-07",
        "saleAmount": 16242.57
      },
      {
        "dtype": "day",
        "dates": "2021-03-08",
        "saleAmount": 15864.62
      },
      {
        "dtype": "day",
        "dates": "2021-03-09",
        "saleAmount": 3786.19
      }
    ],
    "f3": [
      {
        "datet": "month",
        "platformNo": 21,
        "dates": "2021-03",
        "saleAmount": 1245.87,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 66,
        "dates": "2021-03",
        "saleAmount": 48796.69,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 99,
        "dates": "2021-03",
        "saleAmount": 10784.02,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 10,
        "dates": "2021-03",
        "saleAmount": 406.55,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 29,
        "dates": "2021-03",
        "saleAmount": 15975.52,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 36,
        "dates": "2021-03",
        "saleAmount": 30198.46,
        "sort": 1
      },
      {
        "datet": "month",
        "platformNo": 54,
        "dates": "2021-03",
        "saleAmount": 35634.19,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 10,
        "dates": "2021-03-08",
        "saleAmount": 0.00,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 21,
        "dates": "2021-03-09",
        "saleAmount": 65.20,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 21,
        "dates": "2021-03-08",
        "saleAmount": 263.50,
        "sort": 2
      },
      {
        "datet": "day",
        "platformNo": 29,
        "dates": "2021-03-09",
        "saleAmount": 311.26,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 29,
        "dates": "2021-03-08",
        "saleAmount": 1236.76,
        "sort": 2
      },
      {
        "datet": "day",
        "platformNo": 36,
        "dates": "2021-03-09",
        "saleAmount": 388.18,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 36,
        "dates": "2021-03-08",
        "saleAmount": 2834.25,
        "sort": 2
      },
      {
        "datet": "day",
        "platformNo": 54,
        "dates": "2021-03-09",
        "saleAmount": 1399.84,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 54,
        "dates": "2021-03-08",
        "saleAmount": 4043.38,
        "sort": 2
      },
      {
        "datet": "day",
        "platformNo": 66,
        "dates": "2021-03-09",
        "saleAmount": 1543.03,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 66,
        "dates": "2021-03-08",
        "saleAmount": 6506.71,
        "sort": 2
      },
      {
        "datet": "day",
        "platformNo": 99,
        "dates": "2021-03-09",
        "saleAmount": 78.68,
        "sort": 1
      },
      {
        "datet": "day",
        "platformNo": 99,
        "dates": "2021-03-08",
        "saleAmount": 980.02,
        "sort": 2
      }
    ]
  }
}